#----------------------- <+++ansible-managed-file+++> -------------------------+
#
#                             IMPORTANT WARNING
#
#  This file is managed remotely by Ansible orchestration tool. Any local
#  changes will be overwritten without any notice !!! You have been warned !!!
#
#----------------------- <+++ansible-managed-file+++> -------------------------+
{%- set snippet_cleanup = "| sed 's/:/ -/' | cut -f 1 -d \\|;" %}

echo "+------------------------------------------------------------------------------+"
echo "| PostgreSQL database status                                                   |"
echo "+------------------------------------------------------------------------------+"

#
# Check running processes.
#
{{ hm_monitored__plugins_dir }}/check_procs -c {{ hm_pgsql__procs_mincnt }}:{{ hm_pgsql__procs_maxcnt }} -C {{ hm_pgsql__process_name }} {{ snippet_cleanup }}

#
# Common checks
#
{{ hm_monitored__plugins_dir }}/check_postgres_hitratio --dbuser={{ hm_pgsql__monitoring_user }} {{ snippet_cleanup }}
{{ hm_monitored__plugins_dir }}/check_postgres_query_time --dbuser={{ hm_pgsql__monitoring_user }} --warning='{{ hm_pgsql__checks.check_postgres_query_time.w }}' --critical='{{ hm_pgsql__checks.check_postgres_query_time.w }}' {{ snippet_cleanup }}
{{ hm_monitored__plugins_dir }}/check_postgres_backends --dbuser={{ hm_pgsql__monitoring_user }} {{ snippet_cleanup }}

{% for dbname in hm_pgsql__databases %}
#
# Checks for database '{{ dbname }}'.
#
{{ hm_monitored__plugins_dir }}/check_postgres_connection --dbname={{ dbname }} --dbuser={{ hm_pgsql__monitoring_user }} {{ snippet_cleanup }}
{% for check in ['check_postgres_bloat', 'check_postgres_last_analyze', 'check_postgres_last_vacuum', 'check_postgres_last_autoanalyze', 'check_postgres_last_autovacuum'] %}
{% set thresholds = hm_pgsql__checks[check][dbname]|default(hm_pgsql__checks[check]) %}
{% if thresholds is mapping %}
{{ hm_monitored__plugins_dir }}/{{ check }} --dbname={{ dbname }} --dbuser={{ hm_pgsql__monitoring_user }} --warning='{{ thresholds.w }}' --critical='{{ thresholds.c }}' --exclude='pg_catalog.' --exclude='alembic_version' {{ snippet_cleanup }}
{% endif %}
{% endfor %}
{% endfor %}
